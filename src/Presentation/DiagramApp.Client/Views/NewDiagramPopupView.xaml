<?xml version="1.0" encoding="utf-8" ?>
<toolkit:Popup xmlns="http://schemas.microsoft.com/dotnet/2021/maui" 
               xmlns:loc="clr-namespace:LocalizationResourceManager.Maui;assembly=LocalizationResourceManager.Maui"
               xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
               x:Class="DiagramApp.Client.Views.NewDiagramPopupView"
               xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
               xmlns:viewmodel="clr-namespace:DiagramApp.Client.ViewModels"
               xmlns:local="clr-namespace:DiagramApp.Domain.DiagramSettings;assembly=DiagramApp.Domain"
               CanBeDismissedByTappingOutsideOfPopup="False"
               x:DataType="viewmodel:NewDiagramPopupViewModel"
               Size="400, 300">
    <Frame>
        <StackLayout>
            <Label Text="{loc:Translate NewDiagram}"/>
            <Grid ColumnDefinitions="Auto, *"
                  RowDefinitions="Auto, Auto, Auto, Auto, Auto"
                  RowSpacing="5"
                  ColumnSpacing="5"
                  Margin="0, 10, 0, 0">
                <Label Text="{loc:Translate FileName, StringFormat='{0} : '}"
                       Grid.Column="0"
                       Grid.Row="0"
                       Style="{StaticResource LabelNew}"/>
                <Entry x:Name="FileNameEntry"
                       Grid.Column="1"
                       Grid.Row="0"
                       Text="{Binding Settings.FileName, Mode=TwoWay}">
                    <Entry.Behaviors>
                        <toolkit:TextValidationBehavior
                            x:Name="TextValidator"
                            ValidStyle="{StaticResource EntryFileNew}"
                            InvalidStyle="{StaticResource InvalidEntryFileNew}"
                            Flags="ValidateOnValueChanged"
                            MaximumLength="255"
                            RegexPattern="^[^&quot;*/:&lt;&gt;?\\|]*$"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Text="{loc:Translate Width, StringFormat='{0} : '}"
                       Grid.Column="0"
                       Grid.Row="1"
                       Style="{StaticResource LabelNew}"/>
                <Entry x:Name="WidthEntry"
                       Grid.Column="1"
                       Grid.Row="1"
                       Text="{Binding Settings.Width, Mode=TwoWay}">
                    <Entry.Behaviors>
                        <toolkit:NumericValidationBehavior
                            x:Name="WidthValidator"
                            ValidStyle="{StaticResource EntryNew}"
                            InvalidStyle="{StaticResource InvalidEntryNew}"
                            Flags="ValidateOnValueChanged"
                            MinimumValue="300"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Text="{loc:Translate Height, StringFormat='{0} : '}"
                       Grid.Column="0"
                       Grid.Row="2"
                       Style="{StaticResource LabelNew}"/>
                <Entry x:Name="HeightEntry"
                       Grid.Column="1"
                       Grid.Row="2"
                       Text="{Binding Settings.Height, Mode=TwoWay}">
                    <Entry.Behaviors>
                        <toolkit:NumericValidationBehavior
                            x:Name="HeightValidator"
                            ValidStyle="{StaticResource EntryNew}"
                            InvalidStyle="{StaticResource InvalidEntryNew}"
                            Flags="ValidateOnValueChanged"
                            MinimumValue="200"/>
                    </Entry.Behaviors>
                </Entry>

                <Label Text="{loc:Translate Background, StringFormat='{0} : '}"
                       Grid.Column="0"
                       Grid.Row="3"
                       Style="{StaticResource LabelNew}"/>
                <Picker x:Name="BackgroundPicker"
                        Grid.Column="1"
                        Grid.Row="3"
                        SelectedItem="{Binding Settings.Background, Mode=TwoWay}"
                        ItemDisplayBinding="{loc:TranslateBinding ., TranslateValue=True}"
                        Style="{StaticResource PickerNew}">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type local:BackgroundType}">
                            <local:BackgroundType>Default</local:BackgroundType>
                            <local:BackgroundType>White</local:BackgroundType>
                            <local:BackgroundType>Black</local:BackgroundType>
                            <local:BackgroundType>Transparent</local:BackgroundType>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>

                <Label Text="{loc:Translate Type, StringFormat='{0} : '}"
                       Grid.Column="0"
                       Grid.Row="4"
                       Style="{StaticResource LabelNew}"/>
                <Picker x:Name="TypePicker"
                        Grid.Column="1"
                        Grid.Row="4"
                        SelectedItem="{Binding Settings.Type, Mode=TwoWay}"
                        ItemDisplayBinding="{loc:TranslateBinding ., TranslateValue=True}"
                        Style="{StaticResource PickerNew}">
                    <Picker.ItemsSource>
                        <x:Array Type="{x:Type local:DiagramType}">
                            <local:DiagramType>Flowchart</local:DiagramType>
                            <local:DiagramType>Custom</local:DiagramType>
                        </x:Array>
                    </Picker.ItemsSource>
                </Picker>
            </Grid>

            <StackLayout Orientation="Horizontal"
                         Spacing="5"
                         HorizontalOptions="End"
                         VerticalOptions="EndAndExpand">
                <Button Text="{loc:Translate OK}"
                        Command="{Binding OkCommand}"/>
                <Button Text="{loc:Translate Cancel}"
                        Clicked="OnCancelClicked"/>
            </StackLayout>
        </StackLayout>
    </Frame>
</toolkit:Popup>