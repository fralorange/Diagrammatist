<?xml version="1.0" encoding="utf-8" ?>
<Frame xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:controls="clr-namespace:DiagramApp.Client.Controls"
       xmlns:viewmodel="clr-namespace:DiagramApp.Client.ViewModels"
       xmlns:wrappers="clr-namespace:DiagramApp.Client.ViewModels.Wrappers"
       xmlns:components="clr-namespace:DiagramApp.Client.Components"
       x:Class="DiagramApp.Client.Components.EditorView"
       x:DataType="viewmodel:MainViewModel"
       VerticalOptions="FillAndExpand">
    <Frame.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="PathFigureTemplate"
                          x:DataType="wrappers:ObservablePathFigure">
                <Path Data="{Binding ., Converter={StaticResource FigureToValidPropertyConverter}}"
                      Style="{StaticResource Shape}"
                      TranslationX="{Binding TranslationX, Mode=TwoWay}"
                      TranslationY="{Binding TranslationY, Mode=TwoWay}"
                      WidthRequest="{Binding Size, Mode=TwoWay}"
                      HeightRequest="{Binding Size, Mode=OneWay}"
                      Rotation="{Binding Rotation, Mode=TwoWay}">
                    <Path.GestureRecognizers>
                        <PanGestureRecognizer PanUpdated="OnPanElementUpdated"/>
                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MainViewModel}}, Path=SelectItemInCanvasCommand}"
                                              CommandParameter="{Binding .}"/>
                        <PointerGestureRecognizer PointerEntered="OnPointerElementEntered"/>
                    </Path.GestureRecognizers>
                </Path>
            </DataTemplate>
            <DataTemplate x:Key="PolylineFigureTemplate"
                          x:DataType="wrappers:ObservablePolylineFigure">
                <Polyline Points="{Binding ., Converter={StaticResource FigureToValidPropertyConverter}}"
                          Style="{StaticResource Flow}"
                          TranslationX="{Binding TranslationX, Mode=TwoWay}"
                          TranslationY="{Binding TranslationY, Mode=TwoWay}"
                          WidthRequest="{Binding Size, Mode=TwoWay}"
                          HeightRequest="{Binding Size, Mode=OneWay}"
                          Rotation="{Binding Rotation, Mode=TwoWay}">
                    <Polyline.GestureRecognizers>
                        <PanGestureRecognizer PanUpdated="OnPanElementUpdated"/>
                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MainViewModel}}, Path=SelectItemInCanvasCommand}"
                                              CommandParameter="{Binding .}"/>
                        <PointerGestureRecognizer PointerEntered="OnPointerElementEntered"/>
                    </Polyline.GestureRecognizers>
                </Polyline>
            </DataTemplate>
            <DataTemplate x:Key="TextFigureTemplate"
                          x:DataType="wrappers:ObservableTextFigure">
                <Border Style="{StaticResource TextBorder}"
                        TranslationX="{Binding TranslationX, Mode=TwoWay}"
                        TranslationY="{Binding TranslationY, Mode=TwoWay}"
                        Rotation="{Binding Rotation, Mode=TwoWay}">
                    <Label Text="{Binding Text, Mode=TwoWay}"
                           FontSize="{Binding FontSize, Mode=TwoWay}"/>
                    <Border.Triggers>
                        <DataTrigger TargetType="Border"
                                     Binding="{Binding HasOutline}"
                                     Value="False">
                            <Setter Property="Stroke" Value="Transparent" />
                        </DataTrigger>
                        <DataTrigger TargetType="Border"
                                     Binding="{Binding HasBackground}"
                                     Value="False">
                            <Setter Property="BackgroundColor" Value="Transparent"/>
                        </DataTrigger>
                    </Border.Triggers>
                    <Border.GestureRecognizers>
                        <PanGestureRecognizer PanUpdated="OnPanElementUpdated"/>
                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MainViewModel}}, Path=SelectItemInCanvasCommand}"
                                              CommandParameter="{Binding .}"/>
                        <PointerGestureRecognizer PointerEntered="OnPointerElementEntered"/>
                    </Border.GestureRecognizers>
                </Border>
                
            </DataTemplate>
            <components:FigureDataTemplateSelector x:Key="FigureSelector"
                                                   PathFigureTemplate="{StaticResource PathFigureTemplate}"
                                                   PolylineFigureTemplate="{StaticResource PolylineFigureTemplate}"
                                                   TextFigureTemplate="{StaticResource TextFigureTemplate}"/>
        </ResourceDictionary>
    </Frame.Resources>
    <controls:BindableScrollView x:Name="CanvasScrollWindow"
                                 HorizontalScrollBarVisibility="Always" 
                                 VerticalScrollBarVisibility="Always"  
                                 Orientation="Both"
                                 ScrollX="{Binding CurrentCanvas.Offset.X, Mode=OneWayToSource}"
                                 ScrollY="{Binding CurrentCanvas.Offset.Y, Mode=OneWayToSource}"
                                 Scroll="{Binding CurrentCanvas.Offset, Mode=OneWay}">
        <AbsoluteLayout x:Name="FrameCanvasContainer" 
                        WidthRequest="{Binding CurrentCanvas.ImaginaryWidth}" 
                        HeightRequest="{Binding CurrentCanvas.ImaginaryHeight}">

            <Border x:Name="CanvasView"
                    Style="{StaticResource CanvasBorder}"
                    BackgroundColor="{Binding CurrentCanvas.Settings.Background, Converter={StaticResource BackgroundTypeToColorConverter}}"
                    AbsoluteLayout.LayoutBounds="0, 0, 1, 1"
                    AbsoluteLayout.LayoutFlags="All"
                    WidthRequest="{Binding CurrentCanvas.Settings.Width}"
                    HeightRequest="{Binding CurrentCanvas.Settings.Height}"
                    Scale="{Binding CurrentCanvas.Zoom}"
                    Rotation="{Binding CurrentCanvas.Rotation}">
                <Border.Triggers>
                    <DataTrigger Binding="{Binding IsCanvasNotNull}" TargetType="Border" Value="False">
                        <Setter Property="Opacity" Value="0" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsCanvasNotNull}" TargetType="Border" Value="True">
                        <Setter Property="Opacity" Value="1" />
                    </DataTrigger>
                </Border.Triggers>

                <AbsoluteLayout x:Name="CanvasContent"
                                BindableLayout.ItemsSource="{Binding CurrentCanvas.Figures}"
                                BindableLayout.ItemTemplateSelector="{StaticResource FigureSelector}">
                    <AbsoluteLayout.GestureRecognizers>
                        <PointerGestureRecognizer PointerMoved="OnPointerMovedInsideCanvas"
                                                  PointerExited="OnPointerExitedFromCanvas"/>
                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:MainViewModel}}, Path=ResetItemInCanvasCommand}"/>
                    </AbsoluteLayout.GestureRecognizers>
                </AbsoluteLayout>
            </Border>

            <AbsoluteLayout.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="OnPanCanvasUpdated"/>
                <PointerGestureRecognizer PointerEntered="OnPointerEntered"/>
            </AbsoluteLayout.GestureRecognizers>
        </AbsoluteLayout>
    </controls:BindableScrollView>
</Frame>
