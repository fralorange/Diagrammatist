//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Diagrammatist.Presentation.WPF.Resources.Localization.Dialogs.ExportDiagram {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExportDiagramResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExportDiagramResources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Diagrammatist.Presentation.WPF.Resources.Localization.Dialogs.ExportDiagram.Expor" +
                            "tDiagramResources", typeof(ExportDiagramResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export only content.
        /// </summary>
        internal static string Content {
            get {
                return ResourceManager.GetString("Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Margin from borders (px):.
        /// </summary>
        internal static string ContentMargin {
            get {
                return ResourceManager.GetString("ContentMargin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dark theme.
        /// </summary>
        internal static string Dark {
            get {
                return ResourceManager.GetString("Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export scenario: .
        /// </summary>
        internal static string ExportScenario {
            get {
                return ResourceManager.GetString("ExportScenario", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export theme:.
        /// </summary>
        internal static string ExportTheme {
            get {
                return ResourceManager.GetString("ExportTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export entire canvas.
        /// </summary>
        internal static string Full {
            get {
                return ResourceManager.GetString("Full", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Grayscale theme.
        /// </summary>
        internal static string Grayscale {
            get {
                return ResourceManager.GetString("Grayscale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Light theme.
        /// </summary>
        internal static string Light {
            get {
                return ResourceManager.GetString("Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на None.
        /// </summary>
        internal static string None {
            get {
                return ResourceManager.GetString("None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        internal static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Medium (150 ppi).
        /// </summary>
        internal static string PPI_150 {
            get {
                return ResourceManager.GetString("PPI_150", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на High (300 ppi).
        /// </summary>
        internal static string PPI_300 {
            get {
                return ResourceManager.GetString("PPI_300", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Very High (600 ppi).
        /// </summary>
        internal static string PPI_600 {
            get {
                return ResourceManager.GetString("PPI_600", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Screen (72 ppi).
        /// </summary>
        internal static string PPI_72 {
            get {
                return ResourceManager.GetString("PPI_72", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Web (96 ppi).
        /// </summary>
        internal static string PPI_96 {
            get {
                return ResourceManager.GetString("PPI_96", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Other.
        /// </summary>
        internal static string PPI_Custom {
            get {
                return ResourceManager.GetString("PPI_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resolution:.
        /// </summary>
        internal static string Resolution {
            get {
                return ResourceManager.GetString("Resolution", resourceCulture);
            }
        }
    }
}
