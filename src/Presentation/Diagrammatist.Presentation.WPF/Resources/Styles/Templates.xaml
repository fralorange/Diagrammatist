<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lex="http://wpflocalizeextension.codeplex.com"
                    xmlns:figures="clr-namespace:Diagrammatist.Presentation.WPF.Core.Models.Figures;assembly=Diagrammatist.Presentation.WPF.Core"
                    xmlns:controls="clr-namespace:Diagrammatist.Presentation.WPF.Core.Controls;assembly=Diagrammatist.Presentation.WPF.Core"
                    xmlns:behaviors="clr-namespace:Diagrammatist.Presentation.WPF.Core.Interactions.Behaviors;assembly=Diagrammatist.Presentation.WPF.Core"
                    xmlns:selector="clr-namespace:Diagrammatist.Presentation.WPF.Core.Interactions.Selectors;assembly=Diagrammatist.Presentation.WPF.Core"
                    xmlns:simulatorSelector="clr-namespace:Diagrammatist.Presentation.WPF.Simulator.Selectors;assembly=Diagrammatist.Presentation.WPF.Simulator"
                    xmlns:connection="clr-namespace:Diagrammatist.Presentation.WPF.Core.Models.Connection;assembly=Diagrammatist.Presentation.WPF.Core"
                    xmlns:node="clr-namespace:Diagrammatist.Presentation.WPF.Simulator.Models.Node;assembly=Diagrammatist.Presentation.WPF.Simulator"
                    xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker">
    <!--#endregion-->
    <!--#region Toolbox-->
    <DataTemplate x:Key="ToolboxShapeFigureTemplate"
                  DataType="figures:ShapeFigureModel">
        <Path lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Figures.FiguresResources" 
              ToolTip="{lex:Loc {Binding Name}}"
              Style="{StaticResource Shape}"
              Data="{Binding Data, Converter={StaticResource DataToGeometryGroupConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="ToolboxLineFigureTemplate"
                  DataType="figures:LineFigureModel">
        <Polyline lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Figures.FiguresResources" 
                  ToolTip="{lex:Loc {Binding Name}}"
                  Style="{StaticResource Line}"
                  Fill="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}"
                  Points="{Binding Points, Converter={StaticResource DataToPointCollectionConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="ToolboxTextFigureTemplate"
                  DataType="figures:TextFigureModel">
        <Border lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Figures.FiguresResources" 
                ToolTip="{lex:Loc {Binding Name}}"
                Style="{StaticResource ToolboxTextBorder}">
            <TextBlock Text="{Binding Text}"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ToolboxContainerFigureTemplate">
        <Grid lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Figures.FiguresResources"
              ToolTip="{lex:Loc {Binding Name}}">
            <Path Style="{StaticResource Shape}"
                  Data="{Binding Data, Converter={StaticResource DataToGeometryGroupConverter}}"/>
            <TextBlock Text="{Binding Text}"
                       Style="{StaticResource FigureText}"/>
        </Grid>
    </DataTemplate>

    <selector:FigureItemTemplateSelector x:Key="ToolboxFiguresSelector"
                                         ShapeFigureTemplate="{StaticResource ToolboxShapeFigureTemplate}"
                                         LineFigureTemplate="{StaticResource ToolboxLineFigureTemplate}"
                                         TextFigureTemplate="{StaticResource ToolboxTextFigureTemplate}"
                                         ContainerFigureTemplate="{StaticResource ToolboxContainerFigureTemplate}"
                                         FlowchartFigureTemplate="{StaticResource ToolboxContainerFigureTemplate}"/>
    <!--#endregion-->
    <!--#region Canvas-->
    <DataTemplate x:Key="CanvasShapeFigureTemplate"
                  DataType="figures:ShapeFigureModel">
        <Grid behaviors:MagneticPointsAdornerBehavior.AttachMagneticPoints="True"
              behaviors:MagneticPointsAdornerBehavior.IsVisible="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
                         Path=DataContext.CurrentMouseMode, 
                         Converter={StaticResource MouseModeToBoolConverter}, 
                         FallbackValue=False}">
            <Path Data="{Binding Data, Converter={StaticResource DataToGeometryGroupConverter}}"
                  Fill="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}"
                  Width="{Binding Width}"
                  Height="{Binding Height}">
                <Path.Style>
                    <Style TargetType="Path" BasedOn="{StaticResource Shape}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding KeepAspectRatio}"
                                         Value="False">
                                <Setter Property="Stretch" Value="Fill" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CanvasLineFigureTemplate"
                  DataType="figures:LineFigureModel">
        <controls:ObservablePolyline Style="{StaticResource Line}"
                                     Points="{Binding Points}"
                                     PosX="{Binding PosX, Mode=OneWayToSource}"
                                     PosY="{Binding PosY, Mode=OneWayToSource}"
                                     Fill="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}"
                                     Stroke="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}"
                                     StrokeThickness="{Binding Thickness}"
                                     StrokeDashArray="{Binding IsDashed, Converter={StaticResource BoolToStrokeDashArrayConverter}}"
                                     HasArrow="{Binding HasArrow}"/>
    </DataTemplate>

    <DataTemplate x:Key="CanvasTextFigureTemplate"
                  DataType="figures:TextFigureModel">
        <Border>
            <Border.Style>
                <Style TargetType="Border" BasedOn="{StaticResource TextBorder}">
                    <Setter Property="Background" Value="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasOutline}"
                                     Value="False">
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HasBackground}"
                                     Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBlock Text="{Binding Text, Mode=TwoWay}"
                       FontSize="{Binding FontSize}"
                       Foreground="{Binding TextColor, Converter={StaticResource ColorToBrushConverter}}"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="CanvasContainerFigureTemplate">
        <Grid behaviors:MagneticPointsAdornerBehavior.AttachMagneticPoints="True"
              behaviors:MagneticPointsAdornerBehavior.IsVisible="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
                                       Path=DataContext.CurrentMouseMode, 
                                       Converter={StaticResource MouseModeToBoolConverter}, 
                                       FallbackValue=False}">
            <Path Data="{Binding Data, Converter={StaticResource DataToGeometryGroupConverter}}"
                  Fill="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}"
                  Width="{Binding Width}"
                  Height="{Binding Height}">
                <Path.Style>
                    <Style TargetType="Path" BasedOn="{StaticResource Shape}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding KeepAspectRatio}"
                                         Value="False">
                                <Setter Property="Stretch" Value="Fill" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>

            <Border>
                <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="{Binding Text}"
                               FontSize="{Binding FontSize}"
                               Foreground="{Binding TextColor, Converter={StaticResource ColorToBrushConverter}}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                </Viewbox>
            </Border>
        </Grid>
    </DataTemplate>


    <selector:FigureItemTemplateSelector x:Key="CanvasFiguresSelector"
                                         ShapeFigureTemplate="{StaticResource CanvasShapeFigureTemplate}"
                                         LineFigureTemplate="{StaticResource CanvasLineFigureTemplate}"
                                         TextFigureTemplate="{StaticResource CanvasTextFigureTemplate}"
                                         ContainerFigureTemplate="{StaticResource CanvasContainerFigureTemplate}"
                                         FlowchartFigureTemplate="{StaticResource CanvasContainerFigureTemplate}"/>
    <!--#endregion-->
    <!--#region Properties-->
    <DataTemplate x:Key="BasePropertiesFigureTemplate"
                  DataType="figures:FigureModel">
        <UniformGrid Columns="2"
                     lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Properties.PropertiesResources">
            <Label Content="{lex:Loc Name}"/>
            <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="{lex:Loc Rotation}"/>
            <TextBox Text="{Binding Rotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="{lex:Loc Color}"/>
            <colorpicker:PortableColorPicker SelectedColor="{Binding BackgroundColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             ShowAlpha="False"
                                             ShowFractionalPart="False"
                                             Style="{StaticResource PortableColorSlider}"/>
        </UniformGrid>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesShapeFigureTemplate"
                  DataType="figures:ShapeFigureModel">
        <ScrollViewer lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Properties.PropertiesResources">
            <StackPanel>
                <ContentPresenter ContentTemplate="{StaticResource BasePropertiesFigureTemplate}"/>
                <UniformGrid Columns="2">
                    <Label Content="{lex:Loc Width}"/>
                    <TextBox Text="{Binding Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc Height}"/>
                    <TextBox Text="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </UniformGrid>
                <CheckBox Content="{lex:Loc KeepAspectRatio}"
                          IsChecked="{Binding KeepAspectRatio, Mode=TwoWay}"/>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesLineFigureTemplate"
                  DataType="figures:LineFigureModel">
        <ScrollViewer lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Properties.PropertiesResources">
            <StackPanel>
                <ContentPresenter ContentTemplate="{StaticResource BasePropertiesFigureTemplate}"/>
                <UniformGrid Columns="2">
                    <Label Content="{lex:Loc Thickness}"/>
                    <Slider Value="{Binding Thickness, Mode=TwoWay}" 
                            Minimum="1" 
                            Maximum="10"/>
                </UniformGrid>
                <CheckBox Content="{lex:Loc IsDashed}"
                          IsChecked="{Binding IsDashed, Mode=TwoWay}"/>
                <CheckBox Content="{lex:Loc HasArrow}"
                          IsChecked="{Binding HasArrow, Mode=TwoWay}"/>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesTextFigureTemplate"
                  DataType="figures:TextFigureModel">
        <ScrollViewer lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Properties.PropertiesResources">
            <StackPanel>
                <ContentPresenter ContentTemplate="{StaticResource BasePropertiesFigureTemplate}"/>
                <UniformGrid Columns="2">
                    <Label Content="{lex:Loc Text}"/>
                    <TextBox Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc FontSize}"/>
                    <TextBox Text="{Binding FontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc TextColor}"/>
                    <colorpicker:PortableColorPicker SelectedColor="{Binding TextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     ShowAlpha="False"
                                                     ShowFractionalPart="False"
                                                     Style="{StaticResource PortableColorSlider}"/>
                </UniformGrid>
                <CheckBox Content="{lex:Loc HasOutline}"
                          IsChecked="{Binding HasOutline, Mode=TwoWay}"/>
                <CheckBox Content="{lex:Loc HasBackground}"
                          IsChecked="{Binding HasBackground, Mode=TwoWay}"/>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesContainerFigureTemplate">
        <ScrollViewer lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Properties.PropertiesResources">
            <StackPanel>
                <ContentPresenter ContentTemplate="{StaticResource BasePropertiesFigureTemplate}"/>
                <UniformGrid Columns="2">
                    <Label Content="{lex:Loc Width}"/>
                    <TextBox Text="{Binding Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc Height}"/>
                    <TextBox Text="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc Text}"/>
                    <TextBox Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc FontSize}"/>
                    <TextBox Text="{Binding FontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc TextColor}"/>
                    <colorpicker:PortableColorPicker SelectedColor="{Binding TextColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 ShowAlpha="False"
                                 ShowFractionalPart="False"
                                 Style="{StaticResource PortableColorSlider}"/>
                </UniformGrid>
                <CheckBox Content="{lex:Loc KeepAspectRatio}"
                          IsChecked="{Binding KeepAspectRatio, Mode=TwoWay}"/>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <selector:FigureItemTemplateSelector x:Key="PropertiesFigureSelector"
                                         ShapeFigureTemplate="{StaticResource PropertiesShapeFigureTemplate}"
                                         LineFigureTemplate="{StaticResource PropertiesLineFigureTemplate}"
                                         TextFigureTemplate="{StaticResource PropertiesTextFigureTemplate}"
                                         ContainerFigureTemplate="{StaticResource PropertiesContainerFigureTemplate}"
                                         FlowchartFigureTemplate="{StaticResource PropertiesContainerFigureTemplate}"/>
    <!--#endregion-->
    <!--#region Simulator-->
    <DataTemplate x:Key="SimulationNodeTemplate"
                  DataType="node:SimulationNodeBase"
                  xmlns:converters="clr-namespace:Diagrammatist.Presentation.WPF.Resources.Converters">
        <DataTemplate.Resources>
            <converters:EqualityToBrushMultiConverter x:Key="EqualityToBrushMultiConverter" 
                                                      HighlightBrush="{StaticResource ControlHighlightBrush}" 
                                                      DefaultBrush="Transparent"/>
        </DataTemplate.Resources>
        <Border BorderThickness="2">
            <Border.BorderBrush>
                <MultiBinding Converter="{StaticResource EqualityToBrushMultiConverter}">
                    <Binding Path="DataContext.CurrentNode" 
                             RelativeSource="{RelativeSource AncestorType=ListBox}"/>
                    <Binding/>
                </MultiBinding>
            </Border.BorderBrush>
            <ContentControl Content="{Binding Figure}"
                            ContentTemplateSelector="{StaticResource CanvasFiguresSelector}"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="SimulationConnectionTemplate"
                  DataType="connection:ConnectionModel">
        <ContentControl Content="{Binding Line}"
                        ContentTemplateSelector="{StaticResource CanvasFiguresSelector}"/>
    </DataTemplate>

    <DataTemplate x:Key="ScriptTemplate"
                  DataType="node:SimulationNodeBase">
        <StackPanel>
            <TextBlock Text="Lua"
                       FontWeight="Bold"/>
            <TextBox Text="{Binding LuaScript, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                     AcceptsReturn="True"
                     TextWrapping="Wrap"
                     HorizontalScrollBarVisibility="Disabled"
                     VerticalScrollBarVisibility="Auto"
                     VerticalContentAlignment="Top"
                     Margin="5"
                     MinHeight="160"/>
            <Rectangle Style="{StaticResource HorizontalCustomSeparator}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ScriptFileTemplate"
                  DataType="node:SimulationNodeBase"
                  xmlns:adorners="http://gu.se/Adorners">
        <StackPanel>
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource ScriptTemplate}"/>
            <StackPanel Margin="0 5 0 5">
                <TextBlock Text="{lex:Loc Diagrammatist.Presentation.WPF.Simulator:Resources.Localization.SimulatorResources:File}"
                           FontWeight="Bold"/>
                <Button Content="{lex:Loc Diagrammatist.Presentation.WPF.Simulator:Resources.Localization.SimulatorResources:LoadFile}"
                        Command="{Binding DataContext.LoadFileCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                        Margin="5"/>
                <TextBox Text="{Binding ExternalFilePath}"
                         adorners:Watermark.Text="C:\Users\User\example.dgmf"
                         adorners:Watermark.VisibleWhen="Empty"
                         IsReadOnly="True"
                         TextWrapping="Wrap"
                         FontStyle="Italic"
                         FontSize="10"
                         Margin="5,0,5,0"/>
            </StackPanel>
            <Rectangle Style="{StaticResource HorizontalCustomSeparator}"/>
        </StackPanel>
    </DataTemplate>

    <simulatorSelector:SimulationItemSelector x:Key="SimulationItemSelector"
                                              SimulationNodeTemplate="{StaticResource SimulationNodeTemplate}"
                                              SimulationConnectionTemplate="{StaticResource SimulationConnectionTemplate}"/>

    <simulatorSelector:SimulationScriptSelector x:Key="SimulationScriptSelector"
                                                SimulationNodeTemplate="{StaticResource ScriptTemplate}"
                                                SimulationFileNodeTemplate="{StaticResource ScriptFileTemplate}"/>
    <!--#endregion-->
</ResourceDictionary>