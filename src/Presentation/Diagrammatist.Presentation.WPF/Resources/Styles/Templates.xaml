<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:figures="clr-namespace:Diagrammatist.Contracts.Figures;assembly=DiagramApp.Contracts"
                    xmlns:selector="clr-namespace:Diagrammatist.Presentation.WPF.Framework.Selectors">
    <!--#region Toolbox-->
    <DataTemplate x:Key="ToolboxShapeFigureTemplate"
                  DataType="figures:ShapeFigureDto">
        <Path ToolTip="{Binding Name}"
              Style="{StaticResource Shape}"
              Data="{Binding Data, Converter={StaticResource DataToGeometryGroupConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="ToolboxLineFigureTemplate"
                  DataType="figures:LineFigureDto">
        <Polyline ToolTip="{Binding Name}"
                  Style="{StaticResource Line}"
                  Points="{Binding Points, Converter={StaticResource DataToPointCollectionConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="ToolboxTextFigureTemplate"
                  DataType="figures:TextFigureDto">
        <Border ToolTip="{Binding Name}"
                Style="{StaticResource ToolboxTextBorder}">
            <TextBox Text="{Binding Text}"/>
        </Border>
    </DataTemplate>

    <selector:FigureItemTemplateSelector x:Key="ToolboxFiguresSelector"
                                         ShapeFigureTemplate="{StaticResource ToolboxShapeFigureTemplate}"
                                         LineFigureTemplate="{StaticResource ToolboxLineFigureTemplate}"
                                         TextFigureTemplate="{StaticResource ToolboxTextFigureTemplate}"/>
    <!--#endregion-->
    <!--#region Canvas-->
    <DataTemplate x:Key="CanvasShapeFigureTemplate"
                  DataType="figures:ShapeFigureDto">
        <Path Data="{Binding Data, Converter={StaticResource DataToGeometryGroupConverter}}"
              Fill="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}"
              Width="{Binding Width}"
              Height="{Binding Height}">
            <Path.Style>
                <Style TargetType="Path" BasedOn="{StaticResource Shape}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding KeepAspectRatio}"
                                     Value="False">
                            <Setter Property="Stretch" Value="Fill" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
    </DataTemplate>

    <DataTemplate x:Key="CanvasLineFigureTemplate"
                  DataType="figures:LineFigureDto">
        <Polyline Style="{StaticResource Line}"
                  Points="{Binding Points, Converter={StaticResource DataToPointCollectionConverter}}"
                  Fill="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}"
                  StrokeThickness="{Binding Thickness}"
                  StrokeDashArray="{Binding IsDashed, Converter={StaticResource BoolToStrokeDashArrayConverter}}"/>
    </DataTemplate>

    <DataTemplate x:Key="CanvasTextFigureTemplate"
                  DataType="figures:TextFigureDto">
        <Border Background="{Binding BackgroundColor, Converter={StaticResource ColorToBrushConverter}}">
            <Border.Style>
                <Style TargetType="Border" BasedOn="{StaticResource TextBorder}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasOutline}"
                                     Value="False">
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HasBackground}"
                                     Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBox Text="{Binding Text, Mode=TwoWay}"
                     FontSize="{Binding FontSize}"
                     Foreground="{Binding TextColor, Converter={StaticResource ColorToBrushConverter}}"/>
        </Border>
    </DataTemplate>

    <selector:FigureItemTemplateSelector x:Key="CanvasFiguresSelector"
                                         ShapeFigureTemplate="{StaticResource CanvasShapeFigureTemplate}"
                                         LineFigureTemplate="{StaticResource CanvasLineFigureTemplate}"
                                         TextFigureTemplate="{StaticResource CanvasTextFigureTemplate}"/>
    <!--#endregion-->
    <!--#region Properties-->
    <DataTemplate x:Key="BasePropertiesFigureTemplate"
                  DataType="figures:FigureDto">
        <UniformGrid Columns="2">
            <Label Content="Name: "/>
            <TextBox Text="{Binding Name, Mode=TwoWay}"/>
            <Label Content="Rotation: "/>
            <TextBox Text="{Binding Rotation, Mode=TwoWay}"/>
            <Label Content="Color: "/>
            <TextBox Text="{Binding BackgroundColor, Mode=TwoWay}"/>
        </UniformGrid>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesShapeFigureTemplate"
                  DataType="figures:ShapeFigureDto">
        <ScrollViewer>
            <StackPanel>
                <ContentPresenter ContentTemplate="{StaticResource BasePropertiesFigureTemplate}"/>
                <UniformGrid Columns="2">
                    <Label Content="Width: "/>
                    <TextBox Text="{Binding Width, Mode=TwoWay}"/>
                    <Label Content="Height: "/>
                    <TextBox Text="{Binding Height, Mode=TwoWay}"/>
                </UniformGrid>
                <CheckBox Content="Keep aspect ratio"
                          IsChecked="{Binding KeepAspectRatio, Mode=TwoWay}"/>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesLineFigureTemplate"
                  DataType="figures:LineFigureDto">
        <ScrollViewer>
            <StackPanel>
                <ContentPresenter ContentTemplate="{StaticResource BasePropertiesFigureTemplate}"/>
                <UniformGrid Columns="2">
                    <Label Content="Thickness: "/>
                    <Slider Value="{Binding Thickness, Mode=TwoWay}" 
                            Minimum="1" 
                            Maximum="10"/>
                </UniformGrid>
                <CheckBox Content="Is Dashed"
                          IsChecked="{Binding IsDashed, Mode=TwoWay}"/>
                <CheckBox Content="Has Arrow"
                          IsChecked="{Binding HasArrow, Mode=TwoWay}"/>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesTextFigureTemplate"
                  DataType="figures:TextFigureDto">
        <ScrollViewer>
            <StackPanel>
                <ContentPresenter ContentTemplate="{StaticResource BasePropertiesFigureTemplate}"/>
                <UniformGrid Columns="2">
                    <Label Content="Text: "/>
                    <TextBox Text="{Binding Text, Mode=TwoWay}"/>
                    <Label Content="Font size: "/>
                    <TextBox Text="{Binding FontSize, Mode=TwoWay}"/>
                    <Label Content="Text color: "/>
                    <TextBox Text="{Binding TextColor, Mode=TwoWay}"/>
                </UniformGrid>
                <CheckBox Content="Has Outline"
                          IsChecked="{Binding HasOutline, Mode=TwoWay}"/>
                <CheckBox Content="Has Background"
                          IsChecked="{Binding HasBackground, Mode=TwoWay}"/>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <selector:FigureItemTemplateSelector x:Key="PropertiesFigureSelector"
                                         ShapeFigureTemplate="{StaticResource PropertiesShapeFigureTemplate}"
                                         LineFigureTemplate="{StaticResource PropertiesLineFigureTemplate}"
                                         TextFigureTemplate="{StaticResource PropertiesTextFigureTemplate}"/>
    <!--#endregion-->
</ResourceDictionary>