<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
                    xmlns:controls="clr-namespace:Diagrammatist.Presentation.WPF.Core.Controls;assembly=Diagrammatist.Presentation.WPF.Core">
    <!--#region ContextMenu-->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MenuBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource MenuTextBrush}"/>
        <Style.Resources>
            <Style TargetType="Rectangle">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource MenuTextBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="0">
                        <Grid>
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   Placement="Bottom"
                                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border Background="{DynamicResource MenuBackgroundBrush}"
                                        BorderBrush="{DynamicResource MenuBorderBrush}"
                                        BorderThickness="1">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>

                            <Grid Margin="8 2"
                                  HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Path x:Name="CheckMark"
                                      Grid.Column="0"
                                      Width="14"
                                      Height="14"
                                      Margin="0 0 6 0"
                                      Data="M0,5.5 L2.5,8.5 L7.5,0.5"
                                      SnapsToDevicePixels="True"
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"/>

                                <ContentPresenter Grid.Column="1"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  VerticalAlignment="Center">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" 
                                                    Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=MenuItem}}"/>
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>

                                <TextBlock Grid.Column="2"
                                           Text="{TemplateBinding InputGestureText}"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Role, RelativeSource={RelativeSource AncestorType=MenuItem}}" 
                                                             Value="SubmenuItem">
                                                    <Setter Property="Margin" Value="10 0 0 0"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="True">
                            <Setter TargetName="Border" 
                                    Property="Background" 
                                    Value="{DynamicResource MenuItemHoverBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" 
                                 Value="True">
                            <Setter TargetName="Border" 
                                    Property="Background" 
                                    Value="{DynamicResource MenuItemPressedBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" 
                                 Value="False">
                            <Setter Property="Foreground" 
                                    Value="{DynamicResource MenuDisabledTextBrush}"/>
                            <Setter Property="Background"
                                    Value="{DynamicResource MenuDisabledBackgroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="CheckMark"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                     Value="{x:Null}">
                            <Setter Property="Background" 
                                    Value="Transparent"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0 2"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource MenuSeparatorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MenuSeparatorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            Height="1"
                            SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    <!--#region TitleBar-->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource TitleBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TitleBarButtonForeground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="{DynamicResource TitleBarButtonWidth}" />
        <Setter Property="Height" Value="{DynamicResource TitleBarButtonHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitleBarButtonHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TitleBarButtonHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitleBarButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TitleBarButtonPressedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource TitleBarCloseButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TitleBarCloseButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitleBarCloseButtonHoverBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TitleBarCloseButtonHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitleBarCloseButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource TitleBarCloseButtonPressedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style TargetType="TextBlock" x:Key="BaseBlock">
        <Setter Property="Foreground" Value="{DynamicResource FrameForeground}"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="Heading" BasedOn="{StaticResource BaseBlock}">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontWeight" Value="Regular" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource BaseBlock}"/>

    <Style TargetType="TextBox" x:Key="BaseTextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource FrameForeground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ControlHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBox}"/>

    <Style TargetType="Label" x:Key="BaseLabel">
        <Setter Property="Foreground" Value="{DynamicResource FrameForeground}"/>
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource BaseLabel}"/>

    <Style TargetType="Grid" x:Key="Window">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
    </Style>

    <Style TargetType="UserControl" x:Key="Component">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource FrameStrokeRadial}"/>
        <Setter Property="Background" Value="{DynamicResource FrameBackground}"/>
        <Setter Property="Margin" Value="2.5" />
    </Style>

    <Style TargetType="ItemsControl" x:Key="BaseItemsControls">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource FrameBackground}" />
    </Style>

    <Style TargetType="ListBox" BasedOn="{StaticResource BaseItemsControls}"/>
    <Style TargetType="TreeView" BasedOn="{StaticResource BaseItemsControls}"/>

    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseItemsControls}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Border"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource DialogFrameStrokeRadial}">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DialogFrameStroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DialogFrameStroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolBar">
        <Style.Resources>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="5 5 5 0"/>
            </Style>
            <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="{DynamicResource FrameStroke}" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                    Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolBar">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ToolBarPanel Orientation="Horizontal"
                                      IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource ToolbarBackground}" />
    </Style>

    <Style TargetType="Shape" x:Key="BaseGeometry">
        <Setter Property="Stroke" Value="{DynamicResource ShapeDefaultStroke}" />
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>

    <Style TargetType="Path" x:Key="Shape" BasedOn="{StaticResource BaseGeometry}">
        <Setter Property="Fill" Value="{DynamicResource ShapeDefaultBackground}" />
    </Style>

    <Style TargetType="Polyline" x:Key="Line" BasedOn="{StaticResource BaseGeometry}">
        <Setter Property="Fill" Value="Transparent" />
    </Style>

    <Style TargetType="Border" x:Key="TextBorder">
        <Setter Property="BorderBrush" Value="{DynamicResource ShapeDefaultStroke}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="{DynamicResource ShapeDefaultBackground}" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="Border" x:Key="ToolboxTextBorder" BasedOn="{StaticResource TextBorder}">
        <Style.Resources>
            <Style TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="SelectionOpacity" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Button" x:Key="ToolBase">
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="MiniToolBase" BasedOn="{StaticResource ToolBase}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <Style TargetType="Image" x:Key="Tool">
        <Setter Property="MinWidth" Value="35" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="MaxWidth" Value="45" />
        <Setter Property="MaxHeight" Value="45" />
    </Style>

    <Style TargetType="Image" x:Key="MiniTool">
        <Setter Property="MinWidth" Value="15" />
        <Setter Property="MinHeight" Value="15" />
        <Setter Property="MaxWidth" Value="20" />
        <Setter Property="MaxHeight" Value="20" />
    </Style>

    <Style TargetType="TextBlock" x:Key="ToolLabel" BasedOn="{StaticResource BaseBlock}">
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBlock" x:Key="MiniToolLabel" BasedOn="{StaticResource BaseBlock}">
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="colorpicker:PortableColorPicker" x:Key="CustomPortableColorPicker">
        <Style.Resources>
            <Style TargetType="colorpicker:ColorDisplay">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="colorpicker:PortableColorPicker" x:Key="PortableColorSlider" BasedOn="{StaticResource CustomPortableColorPicker}">
        <Style.Resources>
            <Style TargetType="colorpicker:SquarePicker">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>

            <Style TargetType="colorpicker:StandardColorPicker">
                <Setter Property="MinHeight" Value="190"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="Margin" Value="0,-210,0,0"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="ComboBox" x:Key="BaseComboBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ControlHighlightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="4">
                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  Margin="4"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Stretch"/>
                                <Path x:Name="Arrow"
                                      Data="M 0 0 L 4 4 L 8 0"
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="2"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Margin="8,0"/>
                                <ToggleButton x:Name="MainToggleButton"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Opacity="0"/>
                            </Grid>
                        </Border>

                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               StaysOpen="False"
                               Focusable="False"
                               Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Background="{DynamicResource ControlBackgroundBrush}"
                                    BorderBrush="{DynamicResource ControlBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlDisabledBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlDisabledBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlDisabledBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlHighlightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressedBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlHighlightBrush}"/>
                            <Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource ControlHighlightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlFocusedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource BaseComboBox}"/>

    <Style x:Key="BaseButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource FrameForeground}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="MinHeight" Value="30"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlFocusedBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlPressedBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlPressedBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Background" Value="{DynamicResource ControlDisabledBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlDisabledBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MenuDisabledTextBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource BaseButton}"/>

    <Style x:Key="BaseTabControl" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource FrameForeground}"/>
    </Style>

    <Style TargetType="Border" x:Key="TabBorder">
        <Setter Property="Background" Value="{DynamicResource FrameBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource FrameStroke}" />
        <Setter Property="BorderThickness" Value="0.5" />
    </Style>

    <Style x:Key="BaseTabItem" TargetType="TabItem">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource FrameForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border"
                                Background="{DynamicResource ControlBackgroundBrush}"
                                BorderBrush="{DynamicResource  ControlBorderBrush}" 
                                BorderThickness="1,1,1,1"  >
                            <ContentPresenter x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              Margin="12,2,12,2"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlFocusedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlFocusedBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlFocusedBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource FrameForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlDisabledBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlDisabledBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource MenuDisabledTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl" BasedOn="{StaticResource BaseTabControl}"/>
    <Style TargetType="TabItem" BasedOn="{StaticResource BaseTabItem}"/>

    <!--#region ScrollBar-->
    <Style x:Key="ScrollBarLineButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Border"
                            Margin="1"
                            CornerRadius="2"
                            BorderThickness="1"
                            BorderBrush="{DynamicResource ScrollBarStroke}"
                            Background="{DynamicResource ScrollBarBackground}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlPressed}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                      Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource MenuDisabledBG}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Arrow"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" 
                              Fill="{DynamicResource FrameForeground}">
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton"
       TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"
       TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border CornerRadius="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="ScrollBar">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    CornerRadius="2"
                    Background="{DynamicResource ControlBackgroundBrush}" />
            <RepeatButton Grid.Row="0"
                          Style="{DynamicResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track x:Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource ScrollBarThumb}"
                           Margin="1,0,1,0"
                           BorderBrush="{DynamicResource ScrollBarStroke}"
                           Background="{DynamicResource ScrollBarBackground}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2"
                          Style="{DynamicResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    CornerRadius="2"
                    Background="{DynamicResource ControlBackgroundBrush}" />
            <RepeatButton Grid.Column="0"
                          Style="{DynamicResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track x:Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource ScrollBarThumb}"
                           Margin="0,1,0,1"
                           BorderBrush="{DynamicResource ScrollBarStroke}"
                           Background="{DynamicResource ScrollBarBackground}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2"
                          Style="{DynamicResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="controls:ExtendedScrollViewer">
        <Style.Resources>
            <Style TargetType="Rectangle">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
        </Style.Resources>
    </Style>
    <!--#endregion-->
</ResourceDictionary>