<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker">

    <!--#region TitleBar-->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource TitleBarButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource TitleBarButtonForeground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="{StaticResource TitleBarButtonWidth}" />
        <Setter Property="Height" Value="{StaticResource TitleBarButtonHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButtonHoverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TitleBarButtonHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TitleBarButtonPressedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource TitleBarCloseButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarCloseButtonHoverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarCloseButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonPressedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style TargetType="TextBlock" x:Key="Heading">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontWeight" Value="Regular" />
    </Style>

    <Style TargetType="Grid" x:Key="Window">
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
    </Style>

    <Style TargetType="UserControl" x:Key="Component">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" >
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientStop Color="{DynamicResource AppThemeColor}"/>
                    <GradientStop Color="{DynamicResource AppThemeColor}"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource FrameBackground}"/>
        <Setter Property="Margin" Value="2.5" />
    </Style>

    <Style TargetType="ItemsControl" x:Key="BaseItemsControls">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource FrameBackground}" />
    </Style>

    <Style TargetType="ListBox" BasedOn="{StaticResource BaseItemsControls}"/>
    <Style TargetType="TreeView" BasedOn="{StaticResource BaseItemsControls}"/>

    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseItemsControls}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border Name="Border"
                            BorderThickness="1">
                        <Border.BorderBrush>
                            <RadialGradientBrush>
                                <GradientStop Color="{DynamicResource DialogStroke}"/>
                                <GradientStop Color="{DynamicResource DialogStroke}"/>
                            </RadialGradientBrush>
                        </Border.BorderBrush>
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DialogFrameStroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DialogFrameStroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolBar">
        <Style.Resources>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="5 5 5 0"/>
            </Style>
            <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="{StaticResource FrameStroke}" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                    Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolBar">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ToolBarPanel Orientation="Horizontal"
                                      IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ToolbarBackground}" />
    </Style>

    <Style TargetType="Shape" x:Key="BaseGeometry">
        <Setter Property="Stroke" Value="{StaticResource ShapeDefaultStroke}" />
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>

    <Style TargetType="Path" x:Key="Shape" BasedOn="{StaticResource BaseGeometry}">
        <Setter Property="Fill" Value="{StaticResource ShapeDefaultBackground}" />
    </Style>

    <Style TargetType="Polyline" x:Key="Line" BasedOn="{StaticResource BaseGeometry}">
        <Setter Property="Fill" Value="Transparent" />
    </Style>

    <Style TargetType="Border" x:Key="TextBorder">
        <Setter Property="BorderBrush" Value="{StaticResource ShapeDefaultStroke}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="{StaticResource ShapeDefaultBackground}" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="Border" x:Key="ToolboxTextBorder" BasedOn="{StaticResource TextBorder}">
        <Style.Resources>
            <Style TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="SelectionOpacity" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="colorpicker:PortableColorPicker" x:Key="CustomPortableColorPicker">
        <Style.Resources>
            <Style TargetType="colorpicker:ColorDisplay">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="colorpicker:PortableColorPicker" x:Key="PortableColorSlider" BasedOn="{StaticResource CustomPortableColorPicker}">
        <Style.Resources>
            <Style TargetType="colorpicker:SquarePicker">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>

            <Style TargetType="colorpicker:StandardColorPicker">
                <Setter Property="MinHeight" Value="190"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="Margin" Value="0,-210,0,0"/>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>