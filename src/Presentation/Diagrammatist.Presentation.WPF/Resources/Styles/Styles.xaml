<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region TitleBar-->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource TitleBarButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource TitleBarButtonForeground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="{StaticResource TitleBarButtonWidth}" />
        <Setter Property="Height" Value="{StaticResource TitleBarButtonHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButtonHoverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TitleBarButtonHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TitleBarButtonPressedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" BasedOn="{StaticResource TitleBarButtonStyle}" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource TitleBarCloseButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Focusable="False"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarCloseButtonHoverBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonHoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarCloseButtonPressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonPressedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <Style TargetType="TextBlock" x:Key="Heading">
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontWeight" Value="Regular" />
    </Style>
    
    <Style TargetType="UserControl" x:Key="Component">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="MediumPurple" />
        <Setter Property="Margin" Value="2.5" />
    </Style>
    
    <Style TargetType="ItemsControl" x:Key="BaseItemsControls">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="ListBox" BasedOn="{StaticResource BaseItemsControls}">
        
    </Style>

    <Style TargetType="TreeView" BasedOn="{StaticResource BaseItemsControls}">
        
    </Style>

    <Style TargetType="ToolBar">
        <Style.Resources>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="5 5 5 0"/>
            </Style>
            <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Background" Value="MediumPurple" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                    Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    SnapsToDevicePixels="true"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="Shape" x:Key="BaseGeometry">
        <Setter Property="Stroke" Value="MediumPurple" />
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>

    <Style TargetType="Path" x:Key="Shape" BasedOn="{StaticResource BaseGeometry}">
        <Setter Property="Fill" Value="GhostWhite" />
    </Style>

    <Style TargetType="Polyline" x:Key="Line" BasedOn="{StaticResource BaseGeometry}">
        <Setter Property="Fill" Value="Transparent" />
    </Style>

    <Style TargetType="Border" x:Key="TextBorder">
        <Setter Property="BorderBrush" Value="MediumPurple" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="GhostWhite" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="Border" x:Key="ToolboxTextBorder" BasedOn="{StaticResource TextBorder}">
        <Style.Resources>
            <Style TargetType="TextBox">
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="SelectionOpacity" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>