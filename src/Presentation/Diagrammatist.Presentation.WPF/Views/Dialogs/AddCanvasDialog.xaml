<Window x:Class="Diagrammatist.Presentation.WPF.Views.Dialogs.AddCanvasDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Diagrammatist.Presentation.WPF.Views.Dialogs"
        xmlns:vmd="clr-namespace:Diagrammatist.Presentation.WPF.ViewModels.Dialogs"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
        lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.Dialogs.AddCanvas.AddCanvasResources"
        Icon="../../Resources/Icon/appIcon.ico"
        Title="{lex:Loc Diagrammatist.Presentation.WPF:Resources.Localization.MainResources:New}"
        mc:Ignorable="d"
        Height="450" 
        Width="450"
        WindowStartupLocation="CenterOwner"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        d:DataContext="{d:DesignInstance {x:Type vmd:AddCanvasDialogViewModel}}">
    <WindowChrome.WindowChrome>
        <WindowChrome CornerRadius="{x:Static SystemParameters.WindowCornerRadius}"
                  GlassFrameThickness="1,0,1,1"
                  NonClientFrameEdges="Left,Right,Bottom"
                  ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                  UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>
    <DockPanel>
        <Grid DockPanel.Dock="Top"
              x:Name="titleBar"
              Background="{DynamicResource TitleBarBackground}"
              Height="{StaticResource TitleBarHeight}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Image x:Name="icon"
                   Grid.Column="0"
                   Width="24"
                   Height="24"
                   Margin="5,0,0,0"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   MouseDown="OnIconMouseDown"
                   Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=Icon}"
                   WindowChrome.IsHitTestVisibleInChrome="True"/>

            <TextBlock Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}"
                       Grid.Column="1"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Foreground="{DynamicResource FrameForeground}" />

            <Button Grid.Column="2"
                    Click="OnCloseButtonClick"
                    Style="{StaticResource TitleBarCloseButtonStyle}"
                    ToolTip="{lex:Loc Close}"
                    HorizontalAlignment="Right">
                <Path Width="36"
                      Height="32"
                      Data="M 13,11 22,20 M 13,20 22,11"
                      Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"
                      StrokeThickness="1"/>
            </Button>
        </Grid>
        <Grid Style="{StaticResource Window}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Vertical">

                <UniformGrid Grid.Row="0"
                             Margin="20"
                             Columns="2">
                    <UniformGrid.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource BaseLabel}">
                            <Setter Property="Margin" Value="0,0,10,10" />
                        </Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBox}">
                            <Setter Property="Margin" Value="10,10,0,0" />
                        </Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource BaseComboBox}">
                            <Setter Property="Margin" Value="10,10,0,0" />
                        </Style>
                        <Style TargetType="colorpicker:PortableColorPicker" BasedOn="{StaticResource CustomPortableColorPicker}">
                            <Setter Property="Margin" Value="10,10,0,0" />
                        </Style>
                    </UniformGrid.Resources>
                    <Label Content="{lex:Loc FileName}"/>
                    <TextBox Text="{Binding FileName, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc Width}"/>
                    <TextBox Text="{Binding Width}"/>
                    <Label Content="{lex:Loc Height}"/>
                    <TextBox Text="{Binding Height}"/>
                    <Label Content="{lex:Loc DiagramType}"/>
                    <ComboBox ItemsSource="{Binding DiagramType, Converter={StaticResource EnumToCollectionConverter}, Mode=OneTime}"
                              SelectedValue="{Binding DiagramType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Label Content="{lex:Loc Background}"/>
                    <colorpicker:PortableColorPicker SelectedColor="{Binding Background, Converter={StaticResource ColorToMediaColorConverter}, Mode=TwoWay}"
                                                     ShowAlpha="False"
                                                     ShowFractionalPart="False"/>

                </UniformGrid>
            </StackPanel>

            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right"
                        Grid.Row="1">
                <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource BaseButton}">
                        <Setter Property="Margin" Value="10" />
                        <Setter Property="Padding" Value="5" />
                    </Style>
                </StackPanel.Resources>

                <Button Content="{lex:Loc OK}"
                        Command="{Binding OkCommand}"
                        IsDefault="True"/>

                <Button Content="{lex:Loc Cancel}"
                        IsCancel="True"/>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
