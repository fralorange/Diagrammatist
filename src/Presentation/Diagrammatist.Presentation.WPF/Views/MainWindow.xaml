<Window x:Class="Diagrammatist.Presentation.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Diagrammatist.Presentation.WPF.Views"
        xmlns:vm="clr-namespace:Diagrammatist.Presentation.WPF.ViewModels"
        xmlns:components="clr-namespace:Diagrammatist.Presentation.WPF.Views.Components"
        xmlns:md="clr-namespace:MvvmDialogs;assembly=MvvmDialogs"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        lex:LocalizeDictionary.DesignCulture="en"
        lex:ResxLocalizationProvider.DefaultAssembly="Diagrammatist.Presentation.WPF"
        lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.MainResources"
        md:DialogServiceViews.IsRegistered="True"
        Icon="../Resources/Icon/appIcon.ico"
        Title="Diagrammatist"
        MinWidth="985"
        MinHeight="557"
        BorderThickness="{Binding RelativeSource={RelativeSource Mode=Self}, Path=WindowState, Converter={StaticResource WindowStateToThicknessConverter}}"
        ResizeMode="CanResize"
        WindowStyle="SingleBorderWindow"
        x:Name="window"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
        mc:Ignorable="d">
    <WindowChrome.WindowChrome>
        <WindowChrome CornerRadius="{x:Static SystemParameters.WindowCornerRadius}"
                      GlassFrameThickness="1,0,1,1"
                      NonClientFrameEdges="Left,Right,Bottom"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                      UseAeroCaptionButtons="False">
            <WindowChrome.CaptionHeight>
                <MultiBinding Converter="{StaticResource CaptionHeightMultiConverter}">
                    <Binding ElementName="titleBar" Path="ActualHeight"/>
                    <Binding ElementName="window" Path="BorderThickness.Top"/>
                </MultiBinding>
            </WindowChrome.CaptionHeight>
        </WindowChrome>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <!--#region GridSplitters-->
        <Style TargetType="GridSplitter" x:Key="Base">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="False" />
        </Style>
        <Style TargetType="GridSplitter" x:Key="Vertical" BasedOn="{StaticResource Base}">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="3" />
        </Style>
        <Style TargetType="GridSplitter" x:Key="Horizontal" BasedOn="{StaticResource Base}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Height" Value="3" />
        </Style>
        <!--#endregion-->
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+N" 
                    Command="{Binding MenuNewCommand}"/>
        <KeyBinding Gesture="Ctrl+O" 
                    Command="{Binding MenuOpenCommand}"/>
        <KeyBinding Gesture="Ctrl+S" 
                    Command="{Binding MenuSaveCommand}"/>
        <KeyBinding Gesture="Ctrl+Shift+S" 
                    Command="{Binding MenuSaveAsCommand}"/>

        <KeyBinding Gesture="Ctrl+Z" 
                    Command="{Binding MenuUndoCommand}"/>
        <KeyBinding Gesture="Ctrl+Y" 
                    Command="{Binding MenuRedoCommand}"/>

        <KeyBinding Gesture="Ctrl+Plus" 
                    Command="{Binding MenuZoomInCommand}"/>
        <KeyBinding Gesture="Ctrl+Minus" 
                    Command="{Binding MenuZoomOutCommand}"/>
        <KeyBinding Gesture="Ctrl+0" 
                    Command="{Binding MenuZoomResetCommand}"/>

        <KeyBinding Gesture="Ctrl+F1" 
                    Command="{Binding MenuHelpCommand}"/>
    </Window.InputBindings>
   
    <!--#region TitleBar-->
    <DockPanel>
        <Grid DockPanel.Dock="Top"
              x:Name="titleBar"
              MinHeight="{StaticResource TitleBarHeight}"
              Background="{DynamicResource TitleBarBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" 
                                  MinWidth="40" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Image x:Name="icon"
                   Grid.Column="0"
                   Width="24"
                   Height="24"
                   Margin="5,0,0,0"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   MouseDown="OnIconMouseDown"
                   Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=Icon}"
                   WindowChrome.IsHitTestVisibleInChrome="True"/>

            <DockPanel Grid.Column="1"
                       HorizontalAlignment="Stretch">
                <Menu VerticalAlignment="Center"
                      Background="Transparent"
                      DockPanel.Dock="Left"
                      WindowChrome.IsHitTestVisibleInChrome="True">
                    <MenuItem Header="{lex:Loc File}"
                              IsEnabled="{Binding IsNotBlocked}">
                        <MenuItem Header="{lex:Loc New}"
                                  InputGestureText="Ctrl+N"
                                  Command="{Binding MenuNewCommand}"/>
                        <MenuItem Header="{lex:Loc Open}"
                                  InputGestureText="Ctrl+O"
                                  Command="{Binding MenuOpenCommand}"/>
                        <Separator/>
                        <MenuItem Header="{lex:Loc Close}"
                                  Command="{Binding MenuCloseCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"/>
                        <MenuItem Header="{lex:Loc CloseAll}"
                                  Command="{Binding MenuCloseAllCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"/>
                        <Separator/>
                        <MenuItem Header="{lex:Loc Save}"
                                  InputGestureText="Ctrl+S"
                                  Command="{Binding MenuSaveCommand}"
                                  IsEnabled="{Binding HasChangesFlag}"/>
                        <MenuItem Header="{lex:Loc SaveAs}"
                                  InputGestureText="Ctrl+Shift+S"
                                  Command="{Binding MenuSaveAsCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"/>
                        <MenuItem Header="{lex:Loc SaveAll}"
                                  Command="{Binding MenuSaveAllCommand}"
                                  IsEnabled="{Binding HasGlobalChangesFlag}"/>
                        <Separator/>
                        <MenuItem Header="{lex:Loc Export}"
                                  Command="{Binding MenuExportCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"/>
                        <Separator/>
                        <MenuItem Header="{lex:Loc Exit}"
                                  InputGestureText="Alt+F4"
                                  Command="{Binding MenuExitCommand}"/>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc Edit}"
                              IsEnabled="{Binding IsNotBlocked}">
                        <MenuItem Header="{lex:Loc Undo}"
                                  InputGestureText="Ctrl+Z"
                                  Command="{Binding MenuUndoCommand}"
                                  IsEnabled="{Binding HasUndoFlag}"/>
                        <MenuItem Header="{lex:Loc Redo}"
                                  InputGestureText="Ctrl+Y"
                                  Command="{Binding MenuRedoCommand}"
                                  IsEnabled="{Binding HasRedoFlag}"/>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc View}">
                        <MenuItem Header="{lex:Loc ZoomIn}"
                                  InputGestureText="Ctrl++"
                                  Command="{Binding MenuZoomInCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"/>
                        <MenuItem Header="{lex:Loc ZoomOut}"
                                  InputGestureText="Ctrl+-"
                                  Command="{Binding MenuZoomOutCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"/>
                        <MenuItem Header="{lex:Loc ResetZoom}"
                                  InputGestureText="Ctrl+0"
                                  Command="{Binding MenuZoomResetCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"/>
                        <Separator/>
                        <MenuItem Header="{lex:Loc Grid}"
                                  Command="{Binding MenuEnableGridCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"
                                  IsChecked="{Binding HasGridFlag, Mode=OneWay}"/>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc Canvas}"
                              IsEnabled="{Binding IsNotBlocked}">
                        <MenuItem Header="{lex:Loc ChangeSize}"
                                  Command="{Binding MenuChangeSizeCommand}"
                                  IsEnabled="{Binding HasCanvasFlag}"/>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc Preferences}">
                        <MenuItem Header="{lex:Loc General}"
                                  Command="{Binding MenuGeneralPreferencesCommand}"/>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc Help}">
                        <MenuItem Header="{lex:Loc ViewHelp}"
                                  InputGestureText="Ctrl+F1"
                                  Command="{Binding MenuHelpCommand}"/>
                        <Separator/>
                        <MenuItem Header="{lex:Loc AboutApp}"
                                  Command="{Binding MenuAboutCommand}"/>
                    </MenuItem>
                </Menu>

                <TextBlock Margin="10,0,10,0"
                           Visibility="Collapsed"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=Title}"
                           TextTrimming="CharacterEllipsis"
                           TextWrapping="NoWrap"/>
            </DockPanel>

            <Button Grid.Column="2"
                    Click="OnMinimizeButtonClick"
                    Style="{StaticResource TitleBarButtonStyle}"
                    ToolTip="{lex:Loc Minimize}">
                <Path Width="36"
                      Height="32"
                      Data="M 13,15 H 23"
                      Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"
                      StrokeThickness="1"/>
            </Button>

            <Button x:Name="maximizeRestoreButton"
                    Grid.Column="3"
                    Click="OnMaximizeRestoreButtonClick"
                    Style="{StaticResource TitleBarButtonStyle}"
                    ToolTip="{lex:Loc Maximize}"
                    ToolTipOpening="OnMaximizeRestoreButtonToolTipOpening">
                <Path Width="36"
                      Height="32"
                      Data="{Binding ElementName=window, Path=WindowState, Converter={StaticResource WindowStateToPathConverter}}"
                      Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"
                      StrokeThickness="1"/>
            </Button>

            <Button Grid.Column="4"
                    Click="OnCloseButtonClick"
                    Style="{StaticResource TitleBarCloseButtonStyle}"
                    ToolTip="{lex:Loc Close}">
                <Path Width="36"
                      Height="32"
                      Data="M 13,11 22,20 M 13,20 22,11"
                      Stroke="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"
                      StrokeThickness="1"/>
            </Button>
        </Grid>
        
        <!--#endregion-->
        
        <Grid Style="{StaticResource Window}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="0.30*"
                               MinHeight="200"
                               MaxHeight="400"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.15*"
                                  MinWidth="200"
                                  MaxWidth="400"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.15*"
                                  MinWidth="200"
                                  MaxWidth="400"/>
            </Grid.ColumnDefinitions>

            <components:ToolbarComponent Grid.Row="0"
                                         Grid.ColumnSpan="3"
                                         Style="{StaticResource Component}"
                                         IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsNotBlocked}"/>
            <components:FiguresComponent Grid.Row="1"
                                         Grid.RowSpan="2"
                                         Grid.Column="0"
                                         Style="{StaticResource Component}"
                                         IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsNotBlocked}"/>
            
            <!--Splits FiguresComponent from CanvasComponent-->
            <GridSplitter Grid.Row="1" 
                          Grid.RowSpan="2" 
                          Grid.Column="0" 
                          Style="{StaticResource Vertical}" 
                          HorizontalAlignment="Right"/>

            <Grid Grid.Row="1" 
                  Grid.RowSpan="2" 
                  Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <components:ActionComponent Grid.Row="0"
                                            Style="{StaticResource Component}"
                                            IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsBlocked}"/>
                <components:CanvasComponent Grid.Row="1"
                                            Style="{StaticResource Component}"/>
                <components:TabsComponent Grid.Row="2"
                                          Style="{StaticResource Component}"
                                          IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsNotBlocked}"/>
            </Grid>

            <!--Splits ObjectTreeComponent and PropertiesComponent from CanvasComponent-->
            <GridSplitter Grid.Row="1" 
                          Grid.RowSpan="2" 
                          Grid.Column="2" 
                          Style="{StaticResource Vertical}" 
                          HorizontalAlignment="Left"/>

            <components:ObjectTreeComponent Grid.Row="1"
                                            Grid.Column="2"
                                            Style="{StaticResource Component}"
                                            IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsNotBlocked}"/>
            
            <!--Splits PropertiesComponent from ObjectTreeComponent-->
            <GridSplitter Grid.Row="2" 
                          Grid.Column="2" 
                          Style="{StaticResource Horizontal}"
                          VerticalAlignment="Top" />
            
            <components:PropertiesComponent Grid.Row="2"
                                            Grid.Column="2"
                                            Style="{StaticResource Component}"
                                            IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsNotBlocked}"/>
        </Grid>
    </DockPanel>
</Window>
