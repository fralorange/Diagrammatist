<controls:TitleBarWindow x:Class="Diagrammatist.Presentation.WPF.Views.MainWindow"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                         xmlns:local="clr-namespace:Diagrammatist.Presentation.WPF.Views"
                         xmlns:vm="clr-namespace:Diagrammatist.Presentation.WPF.ViewModels"
                         xmlns:components="clr-namespace:Diagrammatist.Presentation.WPF.Views.Components"
                         xmlns:controls="clr-namespace:Diagrammatist.Presentation.WPF.Core.Controls;assembly=Diagrammatist.Presentation.WPF.Core"
                         xmlns:md="clr-namespace:MvvmDialogs;assembly=MvvmDialogs"
                         xmlns:lex="http://wpflocalizeextension.codeplex.com"
                         lex:LocalizeDictionary.DesignCulture="en"
                         lex:ResxLocalizationProvider.DefaultAssembly="Diagrammatist.Presentation.WPF"
                         lex:ResxLocalizationProvider.DefaultDictionary="Resources.Localization.MainResources"
                         md:DialogServiceViews.IsRegistered="True"
                         Icon="{StaticResource AppIcon}"
                         Title="{Binding Source={StaticResource AppMetadata}, Path=Title}"
                         MinWidth="985"
                         MinHeight="557"
                         d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
                         mc:Ignorable="d"
                         Loaded="OnWindowLoaded"
                         Background="Transparent">
    <Window.Resources>
        <!--#region GridSplitters-->
        <Style TargetType="GridSplitter" x:Key="Base">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="False" />
        </Style>
        <Style TargetType="GridSplitter" x:Key="Vertical" BasedOn="{StaticResource Base}">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="3" />
        </Style>
        <Style TargetType="GridSplitter" x:Key="Horizontal" BasedOn="{StaticResource Base}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Height" Value="3" />
        </Style>
        <!--#endregion-->
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+N" 
                    Command="{Binding MenuNewCommand}"/>
        <KeyBinding Gesture="Ctrl+O" 
                    Command="{Binding MenuOpenCommand}"/>
        <KeyBinding Gesture="Ctrl+S" 
                    Command="{Binding MenuSaveCommand}"/>
        <KeyBinding Gesture="Ctrl+Shift+S" 
                    Command="{Binding MenuSaveAsCommand}"/>

        <KeyBinding Gesture="Ctrl+Z" 
                    Command="{Binding MenuUndoCommand}"/>
        <KeyBinding Gesture="Ctrl+Y" 
                    Command="{Binding MenuRedoCommand}"/>

        <KeyBinding Gesture="Ctrl+Plus" 
                    Command="{Binding MenuZoomInCommand}"/>
        <KeyBinding Gesture="Ctrl+Minus" 
                    Command="{Binding MenuZoomOutCommand}"/>
        <KeyBinding Gesture="Ctrl+0" 
                    Command="{Binding MenuZoomResetCommand}"/>

        <KeyBinding Gesture="Ctrl+F1" 
                    Command="{Binding MenuHelpCommand}"/>
    </Window.InputBindings>

    <controls:TitleBarWindow.TitleBarMenuContent>
        <Menu Background="Transparent">
            <MenuItem Header="{lex:Loc File}">
                <MenuItem Header="{lex:Loc New}"
                          InputGestureText="Ctrl+N"
                          Command="{Binding MenuNewCommand}"/>
                <MenuItem Header="{lex:Loc Open}"
                          InputGestureText="Ctrl+O"
                          Command="{Binding MenuOpenCommand}"/>
                <Separator/>
                <MenuItem Header="{lex:Loc Close}"
                          Command="{Binding MenuCloseCommand}"/>
                <MenuItem Header="{lex:Loc CloseAll}"
                          Command="{Binding MenuCloseAllCommand}"/>
                <Separator/>
                <MenuItem Header="{lex:Loc Save}"
                          InputGestureText="Ctrl+S"
                          Command="{Binding MenuSaveCommand}"/>
                <MenuItem Header="{lex:Loc SaveAs}"
                          InputGestureText="Ctrl+Shift+S"
                          Command="{Binding MenuSaveAsCommand}"/>
                <MenuItem Header="{lex:Loc SaveAll}"
                          Command="{Binding MenuSaveAllCommand}"/>
                <Separator/>
                <MenuItem Header="{lex:Loc Export}"
                          Command="{Binding MenuExportCommand}"/>
                <Separator/>
                <MenuItem Header="{lex:Loc Exit}"
                          InputGestureText="Alt+F4"
                          Command="{Binding MenuExitCommand}"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc Edit}">
                <MenuItem Header="{lex:Loc Undo}"
                          InputGestureText="Ctrl+Z"
                          Command="{Binding MenuUndoCommand}"/>
                <MenuItem Header="{lex:Loc Redo}"
                          InputGestureText="Ctrl+Y"
                          Command="{Binding MenuRedoCommand}"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc View}">
                <MenuItem Header="{lex:Loc ZoomIn}"
                          InputGestureText="Ctrl++"
                          Command="{Binding MenuZoomInCommand}"/>
                <MenuItem Header="{lex:Loc ZoomOut}"
                          InputGestureText="Ctrl+-"
                          Command="{Binding MenuZoomOutCommand}"/>
                <MenuItem Header="{lex:Loc ResetZoom}"
                          InputGestureText="Ctrl+0"
                          Command="{Binding MenuZoomResetCommand}"/>
                <Separator/>
                <MenuItem Header="{lex:Loc Grid}"
                          Command="{Binding MenuEnableGridCommand}"
                          IsChecked="{Binding HasGridFlag, Mode=OneWay}"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc Diagram}">
                <MenuItem Header="{lex:Loc ChangeSize}"
                          Command="{Binding MenuChangeSizeCommand}"/>
                <MenuItem Header="{lex:Loc ChangeBackground}"
                          Command="{Binding MenuChangeBackgroundCommand}"/>
                <MenuItem Header="{lex:Loc ChangeType}"
                          Command="{Binding MenuChangeTypeCommand}"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc Tools}">
                <MenuItem Header="{lex:Loc Simulator}"
                          Command="{Binding MenuSimulatorCommand}"/>
                <Separator/>
                <MenuItem Header="{lex:Loc Preferences}"
                          Command="{Binding MenuPreferencesCommand}"/>
            </MenuItem>
            <MenuItem Header="{lex:Loc Help}">
                <MenuItem Header="{lex:Loc ViewHelp}"
                          InputGestureText="Ctrl+F1"
                          Command="{Binding MenuHelpCommand}"/>
                <Separator/>
                <MenuItem Header="{lex:Loc AboutApp}"
                          Command="{Binding MenuAboutCommand}"/>
            </MenuItem>
        </Menu>
    </controls:TitleBarWindow.TitleBarMenuContent>

    <Grid Style="{StaticResource Window}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition x:Name="BottomPanel" 
                           Height="0.30*"
                           MinHeight="200"
                           MaxHeight="400"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="LeftPanel"
                              Width="0.15*"
                              MinWidth="200"
                              MaxWidth="400"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition x:Name="RightPanel"
                              Width="0.15*"
                              MinWidth="200"
                              MaxWidth="400"/>
        </Grid.ColumnDefinitions>

        <components:ToolbarComponent x:Name="ToolbarComponentName"
                                     Grid.Row="0"
                                     Grid.ColumnSpan="3"
                                     Style="{StaticResource Component}"
                                     IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.IsNotBlocked}"/>
        <components:FiguresComponent x:Name="FiguresComponentName"
                                     Grid.Row="1"
                                     Grid.RowSpan="2"
                                     Grid.Column="0"
                                     Style="{StaticResource Component}"
                                     IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.IsNotBlocked}"/>

        <!--Splits FiguresComponent from CanvasComponent-->
        <GridSplitter Grid.Row="1" 
                      Grid.RowSpan="2" 
                      Grid.Column="0" 
                      Style="{StaticResource Vertical}" 
                      HorizontalAlignment="Right"/>

        <Grid Grid.Row="1" 
              Grid.RowSpan="2" 
              Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <components:CanvasComponent x:Name="CanvasComponentName"
                                        Grid.Row="1"
                                        Style="{StaticResource Component}"/>
            <Popup x:Name="ActionPopup"
                   PlacementTarget="{Binding ElementName=CanvasComponentName}"
                   Placement="Custom"
                   CustomPopupPlacementCallback="PlacePopup"
                   StaysOpen="True"
                   AllowsTransparency="True"
                   IsOpen="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.IsBlocked}">
                <components:ActionComponent Style="{StaticResource Component}" />
            </Popup>
            <components:TabsComponent x:Name="TabsComponentName"
                                      Grid.Row="2"
                                      Style="{StaticResource Component}"
                                      IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.IsNotBlocked}"/>
        </Grid>

        <!--Splits ObjectTreeComponent and PropertiesComponent from CanvasComponent-->
        <GridSplitter Grid.Row="1" 
                      Grid.RowSpan="2" 
                      Grid.Column="2" 
                      Style="{StaticResource Vertical}" 
                      HorizontalAlignment="Left"/>

        <components:ObjectTreeComponent x:Name="ObjectTreeComponentName"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Style="{StaticResource Component}"
                                        IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.IsNotBlocked}"/>

        <!--Splits PropertiesComponent from ObjectTreeComponent-->
        <GridSplitter Grid.Row="2" 
                      Grid.Column="2" 
                      Style="{StaticResource Horizontal}"
                      VerticalAlignment="Top" />

        <components:PropertiesComponent x:Name="PropertiesComponentName"
                                        Grid.Row="2"
                                        Grid.Column="2"
                                        Style="{StaticResource Component}"
                                        IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=DataContext.IsNotBlocked}"/>
    </Grid>
</controls:TitleBarWindow>
