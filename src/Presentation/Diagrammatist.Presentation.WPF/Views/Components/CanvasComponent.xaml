<UserControl x:Class="Diagrammatist.Presentation.WPF.Views.Components.CanvasComponent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:Diagrammatist.Presentation.WPF.Views.Components"
             xmlns:controls="clr-namespace:Diagrammatist.Presentation.WPF.Core.Controls;assembly=Diagrammatist.Presentation.WPF.Core"
             xmlns:behaviors="clr-namespace:Diagrammatist.Presentation.WPF.Core.Interactions.Behaviors;assembly=Diagrammatist.Presentation.WPF.Core"
             xmlns:viewmodels="clr-namespace:Diagrammatist.Presentation.WPF.ViewModels.Components"
             d:DataContext="{d:DesignInstance Type=viewmodels:CanvasViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ControlTemplate TargetType="ListBox"
                         x:Key="UnscrollableListBox">
            <ItemsPresenter/>
        </ControlTemplate>
    </UserControl.Resources>
    <controls:ExtendedScrollViewer HorizontalScrollBarVisibility="Visible"
                                   VerticalScrollBarVisibility="Visible"
                                   Focusable="False"
                                   IsPanEnabled="{Binding CurrentMouseMode, Converter={StaticResource MouseModeIsControlConverter}, ConverterParameter='Pan'}"
                                   Cursor="{Binding CurrentMouseMode, Converter={StaticResource MouseModeToCursorConverter}}"
                                   Zoom="{Binding CurrentCanvas.Zoom, Mode=TwoWay}"
                                   x:Name="extScrollViewer">
        <Grid Width="{Binding CurrentCanvas.ImaginaryWidth, FallbackValue=0}" 
              Height="{Binding CurrentCanvas.ImaginaryHeight, FallbackValue=0}">
            <ListBox ItemsSource="{Binding Figures}"
                     ItemTemplateSelector="{StaticResource CanvasFiguresSelector}"
                     SelectedItem="{Binding SelectedFigure}"
                     Template="{StaticResource UnscrollableListBox}"
                     PreviewMouseLeftButtonDown="OnListBoxPreviewMouseLeftButtonDown"
                     x:Name="itemsHolder">
                <ListBox.Resources>
                    <ContextMenu x:Key="ElementMenu">
                        <MenuItem Header="Copy"
                                  Command="{Binding DataContext.CopyCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"/>
                        <MenuItem Header="Cut"
                                  Command="{Binding DataContext.CutCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"/>
                        <MenuItem Header="Duplicate"
                                  Command="{Binding DataContext.DuplicateCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"/>
                        <Separator/>
                        <MenuItem Header="Bring Forward"
                                  Command="{Binding DataContext.BringForwardItemCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"/>
                        <MenuItem Header="Send Backward"
                                  Command="{Binding DataContext.SendBackwardItemCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"/>
                        <Separator/>
                        <MenuItem Header="Delete"
                                  Command="{Binding DataContext.DeleteItemCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext}"/>
                    </ContextMenu>
                </ListBox.Resources>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <controls:ExtendedCanvas Width="{Binding DataContext.CurrentCanvas.Settings.Width, RelativeSource={RelativeSource AncestorType=ListBox}, FallbackValue=0}"
                                                 Height="{Binding DataContext.CurrentCanvas.Settings.Height, RelativeSource={RelativeSource AncestorType=ListBox}, FallbackValue=0}"
                                                 Background="{Binding DataContext.CurrentCanvas.Settings.Background, RelativeSource={RelativeSource AncestorType=ListBox}, Converter={StaticResource ColorToBrushConverter}, FallbackValue=Transparent}"
                                                 IsElementPanEnabled="{Binding DataContext.CurrentMouseMode, RelativeSource={RelativeSource AncestorType=ListBox}, Converter={StaticResource MouseModeIsControlConverter}, ConverterParameter='Select', FallbackValue=False}"
                                                 IsGridVisible="{Binding DataContext.IsGridVisible, RelativeSource={RelativeSource AncestorType=ListBox}, FallbackValue=False}"
                                                 PreviewMouseRightButtonDown="OnExtendedCanvasPreviewMouseRightButtonDown">
                            <controls:ExtendedCanvas.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Paste"
                                              Command="{Binding PlacementTarget.DataContext.PasteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                              CommandParameter="{Binding PlacementTarget.ContextMenu.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                </ContextMenu>
                            </controls:ExtendedCanvas.ContextMenu>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="ItemPositionChanged">
                                    <i:InvokeCommandAction Command="{Binding DataContext.ItemPositionChangeCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                           PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </controls:ExtendedCanvas>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Canvas.Left" Value="{Binding PosX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="Canvas.Top" Value="{Binding PosY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex}"/>
                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="{Binding Rotation}"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContextMenu" Value="{StaticResource ElementMenu}"/>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <i:Interaction.Behaviors>
            <behaviors:ScrollViewerBehavior VerticalOffset="{Binding CurrentCanvas.Offset.X, Mode=TwoWay, FallbackValue=0}"
                                            HorizontalOffset="{Binding CurrentCanvas.Offset.Y, Mode=TwoWay, FallbackValue=0}"/>
        </i:Interaction.Behaviors>
    </controls:ExtendedScrollViewer>
</UserControl>
